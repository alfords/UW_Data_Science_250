getwd()
setwd(getwd() + "week4")
setwd(cat(getwd(),"week4")
c
setwd(paste(getwd(), "/", "week4"))
setwd(paste(getwd(), "/week4"))
var = getwd()
var
var <- paste(var, "/week4")
var
var <- paste(var,"/week4")
var
var <- paste(var,sep="", "/week4")
var
var = getwd()
var <- paste(var, sep="", "/week4")
setwd(var)
getwd()
ls
ls()
ls
var
whoami()
whereis()
# Clear Workspace
rm(list=ls())
# Clear Console:
cat("\014")
source("KMeansHelper.R")
ClusterPlot()
ClusterPlot()
calculateClusterCenters()
calculateClusterCenters <- function(observations=sampleObservations, clusterLabels=labelsRandom)
{
# How many clusterCenters will we make?  What is the maximum cluster label?
Put code in place of this line
# Create a matrix where each row is a cluster center.  The number of columns reflects the dimensionality of the space.
Put code in place of this line
# For loop through each cluster label
Put code in place of this line
{
# Get only the observations from one cluster
Put code in place of this line
# Determine the mean of that cluster in the 1st dimension and assign this mean
# to the 1st dimension of the center
Put code in place of this line
# Determine the mean of that cluster in the 2nd dimension and assign this mean
# to the 2nd dimension of the center
Put code in place of this line
} # Ends the for loop through each cluster id
# Return the clusterCenters
Put code in place of this line
} # end of calculateClusterCenters
findLabelOfClosestCluster <- function(observations = sampleObservations, clusterCenters=centersGuess)
{
# Get the number of clusterCenters
numberOfClusters <- nrow(clusterCenter)
# Get the number of observations
numberOfObservations <- nrow(observations)
# Create a matrix that will contain the squared distances from each observation to each center
# The matrix has numberOfObservations rows and numberOfClusters columns
SquareOfVectoreLength <- matrix(nrow=numberOfObservations, ncol=numberOfClusters)
# Determine the distance from the center to each observation
# For loop for each observation number
for (observationNo = 1:numberOfObservations)
{
# For loop for each center number
for (clusterNo = 1:numberOfClusters)
{
# What is the difference between the current observation and the current center?
# In other words: What is the vector between the observation and center?
observationToCenter <- observations[observationNo,] - clusterCenters[clusterNo,]
# What is the distance squared of this vector?
# In other words: what is the sum of the squares of the vector elements?
distanceSquared <- sum(observationToCenter^2)
# If the distance squared was NA then make it infinite
if (is.na(distanceSquared))
distanceSquared <- Inf
# Assign the distance squared to the proper element in the matrix created above
SquareOfVectoreLength[observationNo, clusterNo] <- distanceSquared
} # end of the for loop for each center number
} # end of the for loop for each observation number
# Determine the labels of the closest center
max.col(-SquareOfVectoreLength)
} # end of findLabelOfClosestCluster
findLabelOfClosestCluster <- function(observations = sampleObservations, clusterCenters=centersGuess)
{
# Get the number of clusterCenters
numberOfClusters <- nrow(clusterCenter)
# Get the number of observations
numberOfObservations <- nrow(observations)
# Create a matrix that will contain the squared distances from each observation to each center
# The matrix has numberOfObservations rows and numberOfClusters columns
SquareOfVectoreLength <- matrix(nrow=numberOfObservations, ncol=numberOfClusters)
# Determine the distance from the center to each observation
# For loop for each observation number
for (observationNo in 1:numberOfObservations)
{
# For loop for each center number
for (clusterNo in 1:numberOfClusters)
{
# What is the difference between the current observation and the current center?
# In other words: What is the vector between the observation and center?
observationToCenter <- observations[observationNo,] - clusterCenters[clusterNo,]
# What is the distance squared of this vector?
# In other words: what is the sum of the squares of the vector elements?
distanceSquared <- sum(observationToCenter^2)
# If the distance squared was NA then make it infinite
if (is.na(distanceSquared))
distanceSquared <- Inf
# Assign the distance squared to the proper element in the matrix created above
SquareOfVectoreLength[observationNo, clusterNo] <- distanceSquared
} # end of the for loop for each center number
} #
findLabelOfClosestCluster()
findLabelOfClosestCluster()
findLabelOfClosestCluster()
findLabelOfClosestCluster()
c
''
''
''
findLabelOfClosestCluster()
findLabelOfClosestCluster <- function(observations = sampleObservations, clusterCenters=centersGuess)
{
# Get the number of clusterCenters
numberOfClusters <- nrow(clusterCenter)
# Get the number of observations
numberOfObservations <- nrow(observations)
# Create a matrix that will contain the squared distances from each observation to each center
# The matrix has numberOfObservations rows and numberOfClusters columns
SquareOfVectoreLength <- matrix(nrow=numberOfObservations, ncol=numberOfClusters)
# Determine the distance from the center to each observation
# For loop for each observation number
for (observationNo in 1:numberOfObservations)
{
# For loop for each center number
for (clusterNo in 1:numberOfClusters)
{
# What is the difference between the current observation and the current center?
# In other words: What is the vector between the observation and center?
observationToCenter <- observations[observationNo,] - clusterCenters[clusterNo,]
# What is the distance squared of this vector?
# In other words: what is the sum of the squares of the vector elements?
distanceSquared <- sum(observationToCenter^2)
# If the distance squared was NA then make it infinite
if (is.na(distanceSquared))
distanceSquared <- Inf
# Assign the distance squared to the proper element in the matrix created above
SquareOfVectoreLength[observationNo, clusterNo] <- distanceSquared
} # end of the for loop for each center number
} # end of the for loop for each observation number
# Determine the labels of the closest center
max.col(-SquareOfVectoreLength)
} # end of findLabelOfClosestCluster
findLabelOfClosestCluster()
findLabelOfClosestCluster <- function(observations = sampleObservations, clusterCenters=centersGuess)
{
# Get the number of clusterCenters
numberOfClusters <- nrow(clusterCenters)
# Get the number of observations
numberOfObservations <- nrow(observations)
# Create a matrix that will contain the squared distances from each observation to each center
# The matrix has numberOfObservations rows and numberOfClusters columns
SquareOfVectoreLength <- matrix(nrow=numberOfObservations, ncol=numberOfClusters)
# Determine the distance from the center to each observation
# For loop for each observation number
for (observationNo in 1:numberOfObservations)
{
# For loop for each center number
for (clusterNo in 1:numberOfClusters)
{
# What is the difference between the current observation and the current center?
# In other words: What is the vector between the observation and center?
observationToCenter <- observations[observationNo,] - clusterCenters[clusterNo,]
# What is the distance squared of this vector?
# In other words: what is the sum of the squares of the vector elements?
distanceSquared <- sum(observationToCenter^2)
# If the distance squared was NA then make it infinite
if (is.na(distanceSquared))
distanceSquared <- Inf
# Assign the distance squared to the proper element in the matrix created above
SquareOfVectoreLength[observationNo, clusterNo] <- distanceSquared
} # end of the for loop for each center number
} # end of the for loop for each observation number
# Determine the labels of the closest center
max.col(-SquareOfVectoreLength)
} # en
findLabelOfClosestCluster()
